{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";AACA,IAAI,UAAU,GAAG,8BAA8B,GACzB,8BAA8B,GAC9B,2BAA2B,GAC3B,iCAAiC,GACjC,4BAA4B,GAC5B,eAAe,GACf,KAAK,GACL,0CAA0C,GAC1C,8BAA8B,GAC9B,4BAA4B,GAC5B,GAAG,CAAC;;AAG1B,IAAI,UAAU,GAAG,iCAAiC,GAChC,4BAA4B,GAC5B,eAAe,GACf,KAAK,GACH,2EAA2E,GAC7E,GAAG,CAAC;;AAKtB,IAAI,WAAW,GAAG;AACd,cAAU,EAAG,OAAO,CAAC,YAAY,CAAC;CACrC,CAAA;;AAED,SAAS,wBAAwB,CAAC,MAAM,EAAE,aAAa,EAAC;AACpD,QAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;AACrB,QAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;AACrB,QAAI,SAAS,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;AACnC,QAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE;AACjB,UAAE,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AAC/B,iBAAS,CAAC,cAAc,CAAC,EAAE,IAAI,IAAI,GAAE,UAAU,GAAG,EAAE,EAAE,EAAE,IAAI,IAAI,GAAE,UAAU,GAAG,EAAE,CAAC,CAAC;AACnF,iBAAS,CAAC,IAAI,EAAE,CAAC;AACjB,iBAAS,CAAC,cAAc,EAAE,CAAC;KAC9B,MAAM;AACH,UAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC9B,iBAAS,CAAC,6BAA6B,CAAC,EAAE,IAAI,IAAI,GAAE,UAAU,GAAG,EAAE,EAAE,EAAE,IAAI,IAAI,GAAE,UAAU,GAAG,EAAE,CAAC,CAAC;AAClG,iBAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,EAAE,EAAE,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;AAC1F,iBAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,oBAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AACpF,iBAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,wBAAwB,EAAE,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;AAC7F,iBAAS,CAAC,IAAI,EAAE,CAAC;AACjB,iBAAS,CAAC,cAAc,EAAE,CAAC;KAC9B;AACD,WAAO,SAAS,CAAC;CACpB;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE,YAAY,EAAE;AACtC,QAAI,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;AACvC,QAAI,EAAE,GAAG,UAAU,CAAC;AACpB,QAAI,MAAM,IAAI,IAAI,EAAC;AACf,UAAE,CAAC,GAAG,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;AACzC,eAAO;KACV;AACD,QAAI,SAAS,GAAG,wBAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;;AAE/D,cAAU,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;CACvC;;AAED,SAAS,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE;;AAE/B,QAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE;AACjB,YAAI,eAAe,GAAG,EAAE,CAAC,cAAc,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;AAC1E,YAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;KAC3C,MAAM;AACH,YAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KAClC;;AAED,QAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC7B,QAAI,CAAC,QAAQ,EAAE,OAAO;;AAEtB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,kBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;KACpC;CACJ;;AAED,MAAM,CAAC,OAAO,GAAG;AACb,gBAAY,EAAE,YAAY;CAC7B,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "\nvar vertShader = \"attribute vec4 a_position;\\n\"\n                    + \"attribute vec2 a_texCoord;\\n\"\n                    + \"attribute vec4 a_color;\\n\"\n                    + \"varying vec4 v_fragmentColor;\\n\"\n                    + \"varying vec2 v_texCoord;\\n\"\n                    + \"void main()\\n\"\n                    + \"{\\n\"\n                    + \"gl_Position = CC_PMatrix * a_position;\\n\"\n                    + \"v_fragmentColor = a_color;\\n\"\n                    + \"v_texCoord = a_texCoord;\\n\"\n                    + \"}\";\n\n\nvar fragShader = \"varying vec4 v_fragmentColor;\\n\"\n                + \"varying vec2 v_texCoord;\\n\"\n                + \"void main()\\n\"\n                + \"{\\n\"\n                +   \"   gl_FragColor = v_fragmentColor * texture2D(CC_Texture0, v_texCoord);\\n\"\n                + \"}\";\n\n\n\n\nvar ShaderArray = {\n    GreyShader : require(\"GreyShader\")\n}\n\nfunction getOrCreateWithGLProgram(shader, glProgramName){\n    var fs = shader.frag;\n    var vs = shader.vert;\n    var glProgram = new cc.GLProgram();\n    if (cc.sys.isNative) {\n        cc.log(\"use native GLProgram\");\n        glProgram.initWithString(vs == null? vertShader : vs, fs == null? fragShader : fs);\n        glProgram.link();\n        glProgram.updateUniforms();\n    } else {\n        cc.log(\"use webgl GLProgram\");\n        glProgram.initWithVertexShaderByteArray(vs == null? vertShader : vs, fs == null? fragShader : fs);\n        glProgram.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\n        glProgram.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\n        glProgram.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\n        glProgram.link();\n        glProgram.updateUniforms();\n    }\n    return glProgram;\n}\n\nfunction setGLProgram(node, glShaderName) {\n    var shader = ShaderArray[glShaderName];\n    var fs = fragShader;\n    if (shader == null){\n        cc.log(\"%s shader is nil\", glShaderName);\n        return;\n    }   \n    var glProgram = getOrCreateWithGLProgram(shader, glShaderName);\n\n    setProgram(node._sgNode, glProgram);\n}\n\nfunction setProgram(node, program) {\n\n    if (cc.sys.isNative) {\n        var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\n        node.setGLProgramState(glProgram_state);\n    } else {\n        node.setShaderProgram(program);\n    }\n\n    var children = node.children;\n    if (!children) return;\n\n    for (var i = 0; i < children.length; i++) {\n        setProgram(children[i], program);\n    }\n} \n\nmodule.exports = {\n    setGLProgram: setGLProgram\n};\n\n\n"
  ]
}